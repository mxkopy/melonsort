FROM nvidia/cuda:12.5.1-cudnn-devel-ubuntu22.04

ARG DEBIAN_FRONTEND=noninteractive

# Use login shell to read variables from `~/.profile` (to pass dynamic created variables between RUN commands)
SHELL ["sh", "-lc"]

# The following `ARG` are mainly used to specify the versions explicitly & directly in this docker file, and not meant
# to be used as arguments for docker build (so far).

ARG PYTORCH='2.3.0'
# (not always a valid torch version)
ARG INTEL_TORCH_EXT='2.3.0'
# Example: `cu102`, `cu113`, etc.
ARG CUDA='cu121'

RUN apt update
RUN apt install -y \
    git \
    libsndfile1-dev \
    tesseract-ocr \
    espeak-ng \
    python3 \
    python3-pip \
    ffmpeg \
    git-lfs \
    curl \
    wget \
    build-essential \
    pkg-config \
    libpq-dev \
    python3-dev \
    libasound2-dev \
    libaio-dev

RUN git lfs install
RUN python3 -m pip install --no-cache-dir --upgrade pip

# 1. Put several commands in a single `RUN` to avoid image/layer exporting issue. Could be revised in the future.
# 2. Regarding `torch` part, We might need to specify proper versions for `torchvision` and `torchaudio`.
#    Currently, let's not bother to specify their versions explicitly (so installed with their latest release versions).
RUN [ ${#PYTORCH} -gt 0 -a "$PYTORCH" != "pre" ] && VERSION='torch=='$PYTORCH'.*' ||  VERSION='torch'; echo "export VERSION='$VERSION'" >> ~/.profile && echo torch=$VERSION && [ "$PYTORCH" != "pre" ] && python3 -m pip install --no-cache-dir -U $VERSION torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/$CUDA || python3 -m pip install --no-cache-dir -U --pre torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/nightly/$CUDA

RUN python3 -m pip uninstall -y flax jax

RUN python3 -m pip install --no-cache-dir intel_extension_for_pytorch==$INTEL_TORCH_EXT -f https://developer.intel.com/ipex-whl-stable-cpu

RUN python3 -m pip install --no-cache-dir git+https://github.com/huggingface/peft@main#egg=peft

# For bettertransformer
RUN python3 -m pip install --no-cache-dir git+https://github.com/huggingface/optimum@main#egg=optimum

# For video model testing
RUN python3 -m pip install --no-cache-dir decord av==9.2.0

# Some slow tests require bnb
RUN python3 -m pip install --no-cache-dir bitsandbytes

# Some tests require quanto
RUN python3 -m pip install --no-cache-dir quanto

# For `dinat` model
# The `XXX` part in `torchXXX` needs to match `PYTORCH` (to some extent)
RUN python3 -m pip install --no-cache-dir natten==0.15.1+torch220$CUDA -f https://shi-labs.com/natten/wheels

# For `nougat` tokenizer
RUN python3 -m pip install --no-cache-dir python-Levenshtein

# For `FastSpeech2ConformerTokenizer` tokenizer
RUN python3 -m pip install --no-cache-dir g2p-en

# Helpful backend
RUN python3 -m pip install --no-cache-dir soundfile

# We like data
RUN python3 -m pip install --no-cache-dir datasets 

# Native dataset format for CLAP
RUN python3 -m pip install --no-cache-dir webdataset

# Things break without this
RUN python3 -m pip install --no-cache-dir sentencepiece

# `quanto` will install `ninja` which leads to many `CUDA error: an illegal memory access ...` in some model tests
# (`deformable_detr`, `rwkv`, `mra`)
RUN python3 -m pip uninstall -y ninja

# rest da best
RUN python3 -m pip install --no-cache-dir fastapi
RUN python3 -m pip install --no-cache-dir pydantic
RUN python3 -m pip install --no-cache-dir requests

# Super helpful audio file metadata library 
RUN python3 -m pip install --no-cache-dir mutagen

RUN python3 -m pip install --no-cache-dir git+https://github.com:/mxkopy/transformers@adds-clap-auto-device-map

RUN python3 -m pip install librespot 

RUN apt-get install flac

WORKDIR /srv/melonsort

CMD [ "fastapi", "dev", "melonsort.py", "--port", "80", "--host", "0.0.0.0"]
